{"ast":null,"code":"import _classCallCheck from \"/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/src/components/count-context.js\";\nimport React from 'react';\nexport var CountContext = React.createContext();\n\nvar Counter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Counter, _React$Component);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this, props));\n\n    _this.increment = function () {\n      var up = _this.state.count + 1;\n\n      _this.setState({\n        count: up\n      });\n    };\n\n    _this.decrement = function () {\n      var down = _this.state.count - 1;\n\n      _this.setState({\n        count: down\n      });\n    };\n\n    _this.state = {\n      count: 0,\n      increment: _this.increment,\n      decrement: _this.decrement\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CountContext.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return Counter;\n}(React.Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/caity/codefellows/401/lab/36-context-and-hooks/context-and-hooks/src/components/count-context.js"],"names":["React","CountContext","createContext","Counter","props","increment","up","state","count","setState","decrement","down","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,EAArB;;IAEDC,O;;;;;AACJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,iFAAMA,KAAN;;AADgB,UAQlBC,SARkB,GAQN,YAAM;AAChB,UAAIC,EAAE,GAAG,MAAKC,KAAL,CAAWC,KAAX,GAAmB,CAA5B;;AACA,YAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAEF;AAAR,OAAd;AACD,KAXiB;;AAAA,UAYlBI,SAZkB,GAYN,YAAM;AAChB,UAAIC,IAAI,GAAG,MAAKJ,KAAL,CAAWC,KAAX,GAAkB,CAA7B;;AACA,YAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAEG;AAAR,OAAd;AACD,KAfiB;;AAEhB,UAAKJ,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXH,MAAAA,SAAS,EAAE,MAAKA,SAFL;AAGXK,MAAAA,SAAS,EAAE,MAAKA;AAHL,KAAb;AAFgB;AAOjB;;;;6BAUQ;AACP,aACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,KAAKH,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKH,KAAL,CAAWQ,QADb,CADF;AAKD;;;;EAxBmBZ,KAAK,CAACa,S;;AA2B5B,eAAeV,OAAf","sourcesContent":["import React from 'react';\nexport const CountContext = React.createContext();\n\nclass Counter extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      count: 0,\n      increment: this.increment,\n      decrement: this.decrement\n    }\n  }\n  increment = () => {\n    let up = this.state.count + 1;\n    this.setState({count: up});\n  }\n  decrement = () => {\n    let down = this.state.count -1\n    this.setState({count: down});\n  }\n\n  render() {\n    return (\n      <CountContext.Provider value={this.state}>\n       {this.props.children}\n      </CountContext.Provider>\n    )\n  }\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}